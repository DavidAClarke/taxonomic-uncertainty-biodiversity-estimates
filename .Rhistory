dplyr::select(-9)
write.csv(ph_stats, file = here(dirname(here()),"data", "biodiversity", "output", "range_size", "ph_stats.csv"))
# Could remove x axis text for EOO plots and just use AOO text when combining figures
eoo_b05_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b05,
y = rs_eoo_b0.5,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
p.adjust.method = "holm",
nboot = 200,
xlab = "Species",
ylab = bquote("Extent of occurrence " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4,
vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b05$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
eoo_b075_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b075,
y = rs_eoo_b0.75,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
p.adjust.method = "holm",
nboot = 200,
xlab = "Species",
ylab = bquote("Extent of occurrence " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4, vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b075$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
aoo_b05_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b05,
y = rs_aoo_b0.5,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
p.adjust.method = "holm",
nboot = 200,
xlab = "Species",
ylab = bquote("Area of occupancy " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4, vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b05$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
aoo_b075_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b075,
y = rs_aoo_b0.75,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
nboot = 200,
xlab = "Species",
ylab = bquote("Area of occupancy " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4, vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b075$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
## Need figures made without stats
ggpubr::ggarrange(eoo_b05_kw, aoo_b05_kw, ncol = 1, nrow = 2, align = "v")
ggpubr::ggarrange(eoo_b075_kw, aoo_b075_kw, ncol = 1, nrow = 2, align = "v")
res_path <- here(dirname(here()),"data", "biodiversity", "output", "reps_csv")
## 3.1 | Species distribution modelling----
mod_files <- list.files(res_path)
# Evaluation
eval_files <- mod_files[str_detect(mod_files, "evaluation")]
eval_list <- list()
for(i in 1:length(eval_files)){
mod_eval <- read.csv(here(res_path, eval_files[i]))
if(str_detect(eval_files[i], "old")){
mod_eval <- mod_eval %>% mutate(Species = "Promachocrinus")
}
if(str_detect(eval_files[i], "comp")){
mod_eval <- mod_eval %>% mutate(Species = "P. kerguelensis (s.l.)")
}
if(str_detect(eval_files[i], "new")){
mod_eval <- mod_eval %>% mutate(Species = paste("P.", str_split(eval_files[i], "_")[[1]][3]))
}
eval_list[[i]] <- mod_eval
}
mod_evals <- bind_rows(eval_list) %>%
mutate(Species = factor(Species, levels = c("Promachocrinus",
"P. kerguelensis (s.l.)",
"P. kerguelensis",
"P. fragarius", "P. unruhi",
"P. uskglass", "P. joubini",
"P. mawsoni"))) %>%
arrange(Species) %>%
filter(Species != "Promachocrinus")
View(mod_evals)
gg <- mod_evals %>% group_by(Species, Model) %>% mutate(med_auc = median(AUC)) %>%
mutate(mean_auc = mean(AUC)) %>%
mutate(sd_auc = sqrt(var(AUC)))
gg
View(gg)
?arrange
gg %>% arrange(desc(mean_auc))
gg %>% group_by(Species) %>% arrange(desc(mean_auc))
gg %>% summarise()
?summarise
gg <- mod_evals %>% group_by(Species, Model) %>% summarise(mean_auc = mean(AUC), sd_auc = sqrt(var(AUC)))
gg %>% group_by(Species) %>% summarise(max_auc = max(mean_auc))
which(gg$Model == max(gg$mean_auc))
which(gg == max(gg$mean_auc))
inds <- c()
for(s in unique(gg$Species)){
f <- gg %>% filter(Species == s)
ind <- which(f == max(f$mean_auc))
inds <- c(inds, ind)
}
inds
gg[inds,]
for(s in unique(gg$Species)){
f <- gg %>% filter(Species == s)
ind <- which(gg == max(f$mean_auc))
inds <- c(inds, ind)
}
inds <- c()
for(s in unique(gg$Species)){
f <- gg %>% filter(Species == s)
ind <- which(gg == max(f$mean_auc))
inds <- c(inds, ind)
}
gg[inds,]
inds
inds <- c()
for(s in unique(gg$Species)){
f <- gg %>% filter(Species == s)
ind <- max(f$mean_auc)
inds <- c(inds, ind)
}
inds
which(gg$mean_auc == inds)
which(gg$mean_auc == inds[1])
which(gg$mean_auc == inds[2])
apply(gg, 1, which(mean_auc == inds))
apply(gg, 1, which(gg$mean_auc == inds))
which(gg$mean_auc == inds[3])
in <- c()
ind <- c()
for(i in 1:7){
ind <- c(ind, which(gg$mean_auc == inds[i]))
}
ind
gg[ind,]
lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = "model_50", full.names = T)
sdm_list <- list()
pk_comp <- lyrs[str_detect(lyrs,"comp")]
pk_comp <- pk_comp[str_detect(pk_comp, "FALSE")]
pk_comp
sdm_list[["comp"]] <- rast(pk_comp)
sdm_list
lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = "model_16", full.names = T)
sdm_list <- list()
pk_comp <- lyrs[str_detect(lyrs,"comp")]
pk_comp <- pk_comp[str_detect(pk_comp, "FALSE")]
sdm_list[["comp"]] <- rast(pk_comp)
betas <- c(0.5, 0.75)
for(n in betas){
rs_eoo <- c()
rs_aoo <- c()
for(i in seq_along(sdm_list)){
rs_list <- range_fun(sdm_list[[i]], beta = n)
rs_eoo <- c(rs_eoo, rs_list[[1]])
rs_aoo <- c(rs_aoo, rs_list[[2]])
}
save(rs_eoo, file = here("data", "biodiversity", "output", "range_size",
paste0("rs_eoo_b_",n,".RData")))
save(rs_aoo, file = here("data", "biodiversity", "output", "range_size",
paste0("rs_aoo_b_",n,".RData")))
}
boxplot(rs_eoo)
## Need figures made without stats
ggpubr::ggarrange(eoo_b05_kw, aoo_b05_kw, ncol = 1, nrow = 2, align = "v")
ggpubr::ggarrange(eoo_b075_kw, aoo_b075_kw, ncol = 1, nrow = 2, align = "v")
gg[ind,]
species_models <- c(72,40,50,54,54,5)
new_species <- lyrs[str_detect(lyrs,"new")]
for(i in seq_along(species_names)){
sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",species_models[i],"*")))]
sdm_list[[species_names[i]]] <- rast(sp)
}
species_names <- c("kerguelensis", "fragarius", "unruhi", "uskglass", #uskglassi
"joubini", "mawsoni")
for(i in seq_along(species_names)){
sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",species_models[i],"*")))]
sdm_list[[species_names[i]]] <- rast(sp)
}
glob2rx(paste0("*",species_names[i],"*",species_models[i],"*"))
glob2rx(paste0("*",gas,"*acbr*"))
glob2rx(paste0("*","gas","*acbr*"))
new_species
new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))), full.names = T)
sp_lyrs
sp_lyrs <- list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i]),"*")), full.names = T)
sp_lyrs
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i]),"*")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp)
}
list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*",species_names[1],"*",paste0("model_",species_models[1]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*",species_names[1],"*",paste0("model_",species_models[1]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[1],"*",paste0("model_",species_models[1]),"*")), full.names = T)
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i]),"*")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp)
}
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i]),"*")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
sp_lyrs
seq_along(species_names)
list.files(here("data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[1],"*",paste0("model_",species_models[1]),"*")), full.names = T)
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i]),"*")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
sdm_list
sdm_list[["mawsoni"]]
sdm_list[["mawsoni"]][[1]]
sdm_list[["mawsoni"]][[2]]
sdm_list[["mawsoni"]][[3]]
sp_lyrs
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i]))), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
?glob2rx
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i])), trim.tail = T), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i])), trim.tail = F), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i]),"$")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[1],"$",paste0("model_",species_models[1]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[1],".$",paste0("model_",species_models[1]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[7],"*",paste0("model_",species_models[7]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[6],"*",paste0("model_",species_models[6]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[6],"*",paste0("model_",species_models[6]),".")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[6],".",paste0("model_",species_models[6]),".")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[6],"*",paste0("model_",species_models[6]),"*")), full.names = T)
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[6],"*",paste0("model_",species_models[6],"."),"*")), full.names = T)
sdm_list <- list()
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i],"."),"*")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
View(sdm_list)
sdm_list[["mawsoni"]]
sdm_list[["unruhi"]]
list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx("*comp*model_16*"), full.names = T)
pk_comp <- list.files(here(dirame(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx("*comp*model_16*"), full.names = T)
pk_comp <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx("*comp*model_16*"), full.names = T)
sdm_list <- list()
sdm_list[["comp"]] <- rast(pk_comp)
## Only for range sizes, not niche comparisons
for(i in seq_along(species_names)){
#sp <- new_species[str_detect(new_species,glob2rx(paste0("*",species_names[i],"*",paste0("model_",species_models[i],"*"))))]
sp_lyrs <- list.files(here(dirname(here()),"data", "biodiversity", "output", "reps_sdm"),
pattern = glob2rx(paste0("*new*",species_names[i],"*",paste0("model_",species_models[i],"."),"*")), full.names = T)
sdm_list[[species_names[i]]] <- rast(sp_lyrs)
}
betas <- c(0.5, 0.75)
for(n in betas){
rs_eoo <- c()
rs_aoo <- c()
for(i in seq_along(sdm_list)){
rs_list <- range_fun(sdm_list[[i]], beta = n)
rs_eoo <- c(rs_eoo, rs_list[[1]])
rs_aoo <- c(rs_aoo, rs_list[[2]])
}
save(rs_eoo, file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_eoo_b_",n,"diff_models.RData")))
save(rs_aoo, file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_aoo_b_",n,"diff_models.RData")))
}
## Load the required libraries
pkgs <- c("sf","tidyverse","here","terra","raster","sdmpredictors", "usdm",
"randomForest", "precrec","lubridate", "parzer", "adehabitatHR",
"hypervolume", "caret", "redlistr", "rcartocolor")
lapply(pkgs, require, character.only = T)
## Load the required libraries
pkgs <- c("sf","tidyverse","here","terra","raster","sdmpredictors", "usdm",
"randomForest", "precrec","lubridate", "parzer", "adehabitatHR",
"hypervolume", "caret", "redlistr", "rcartocolor")
lapply(pkgs, require, character.only = T)
install.packages("usdm")
install.packages("parzer")
################################################################################
## Load user-defined functions
source("R/01_functions.R")
shared_data <- "C:/Users/david/Documents/postdoc/projects/shared_data/environmental"
res_path <- here(dirname(here()),"data", "biodiversity", "output", "reps_csv")
sdm_path <- here(dirname(here()),"data", "biodiversity", "output", "reps_sdm")
model_path <- here(dirname(here()),"data", "biodiversity", "output", "models")
hypervolume_res_path <- here(dirname(here()),"data", "biodiversity", "output", "hypervolumes")
rs_eoo_b0.5 <- loadRData(file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_eoo_b_",0.5,"_diff_models.RData")))
rs_eoo_b0.5 <- loadRData(file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_eoo_b_",0.5,"diff_models.RData")))
rs_eoo_b0.75 <- loadRData(file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_eoo_b_",0.75,"diff_models.RData")))
rs_aoo_b0.5 <- loadRData(file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_aoo_b_",0.5,"diff_models.RData")))
rs_aoo_b0.75 <- loadRData(file = here(dirname(here()),"data", "biodiversity", "output", "range_size",
paste0("rs_aoo_b_",0.75,"diff_models.RData")))
species <- c(rep("P. kerguelensis (s.l.)",20),
rep("P. kerguelensis",20),
rep("P. fragarius",20),
rep("P. unruhi",20),
rep("P. uskglassi",20),
rep("P. joubini",20),
rep("P. mawsoni",20))
# rl_df <- data.frame(species, eoo_vals_mtp, eoo_vals_0.5, eoo_vals_0.75,
#                     aoo_vals_mtp, aoo_vals_0.5, aoo_vals_0.75)
rl_df <- data.frame(species,
rs_eoo_b0.5, rs_aoo_b0.5,
rs_eoo_b0.75, rs_aoo_b0.75) %>%
mutate(species = factor(species, levels = c("P. kerguelensis (s.l.)", "P. kerguelensis",
"P. fragarius", "P. unruhi",
"P. uskglassi", "P. joubini",
"P. mawsoni")))
View(rl_df)
rl_df_b05 <- rl_df %>%
group_by(species) %>%
dplyr::select(species, rs_eoo_b0.5, rs_aoo_b0.5) %>%
mutate(med_eoo = median(rs_eoo_b0.5)) %>%
mutate(mean_eoo = mean(rs_eoo_b0.5)) %>%
mutate(sd_eoo = sqrt(var(rs_eoo_b0.5))) %>%
mutate(med_aoo = median(rs_aoo_b0.5)) %>%
mutate(mean_aoo = mean(rs_aoo_b0.5)) %>%
mutate(sd_aoo = sqrt(var(rs_aoo_b0.5)))
rl_df_b075 <- rl_df %>%
group_by(species) %>%
dplyr::select(species, rs_eoo_b0.75, rs_aoo_b0.75) %>%
mutate(med_eoo = median(rs_eoo_b0.5)) %>%
mutate(mean_eoo = mean(rs_eoo_b0.5)) %>%
mutate(sd_eoo = sqrt(var(rs_eoo_b0.5))) %>%
mutate(med_aoo = median(rs_aoo_b0.5)) %>%
mutate(mean_aoo = mean(rs_aoo_b0.5)) %>%
mutate(sd_aoo = sqrt(var(rs_aoo_b0.5)))
# Could remove x axis text for EOO plots and just use AOO text when combining figures
eoo_b05_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b05,
y = rs_eoo_b0.5,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
p.adjust.method = "holm",
nboot = 200,
xlab = "Species",
ylab = bquote("Extent of occurrence " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4,
vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b05$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
eoo_b075_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b075,
y = rs_eoo_b0.75,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
p.adjust.method = "holm",
nboot = 200,
xlab = "Species",
ylab = bquote("Extent of occurrence " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4, vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b075$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
aoo_b05_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b05,
y = rs_aoo_b0.5,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
p.adjust.method = "holm",
nboot = 200,
xlab = "Species",
ylab = bquote("Area of occupancy " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4, vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b05$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
aoo_b075_kw <- ggstatsplot::ggbetweenstats(data = rl_df_b075,
y = rs_aoo_b0.75,
x = species,
type = "nonparametric",
pairwise.display = "none", # "none"
results.subtitle = F,
nboot = 200,
xlab = "Species",
ylab = bquote("Area of occupancy " (km^2)),
ggtheme = ggplot2::theme_bw(),
point.args = list(alpha = 1),
ggsignif.args = list(textsize = 4, vjust = 0.5),
centrality.label.args = list(size = 4),
centrality.plotting = F) +
scale_colour_manual(values = unlist(cartocolors[cartocolors$Name == "Safe",8]),
breaks = unique(rl_df_b075$species)) +
scale_y_continuous(labels = expSup) +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 14),
axis.text.x = element_text(vjust = 0.5, face = "italic")) +
guides(x = guide_axis(n.dodge = 2))
## Need figures made without stats
ggpubr::ggarrange(eoo_b05_kw, aoo_b05_kw, ncol = 1, nrow = 2, align = "v")
ggpubr::ggarrange(eoo_b075_kw, aoo_b075_kw, ncol = 1, nrow = 2, align = "v")
??frank
